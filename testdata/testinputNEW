# The test regex and subjects we will use for the following
/\w+|^$/replace=<$&>,global,substitute_matched
    \=substitute_subject=,substitute_overwrite
    \=null_subject
    :::
    foo\=zero_terminate
    foo|bar\=offset=1,substitute_offset=1
    F|OOBAR\=offset=1

# ####################
# ERRORS
# ####################

# substitute_subject has the same contents, but a different pointer
# Failed: error -71: substitute subject differs from prior pcre2_match call
/\w+|^$/replace=<$&>,global,substitute_matched
    \=null_subject,substitute_subject=
    \=null_substitute_subject
    \=substitute_subject=
    foo\=substitute_subject=foo


# Failed: error -72: substitute subject length differs from prior pcre2_match call
# Changing the length is always an error
# (using PCRE2_ZERO_TERMINATED but with different length strings also counts)
/\w+|^$/replace=<$&>,global,substitute_matched
    \=substitute_subject=x,substitute_overwrite
    \=substitute_subject=x,substitute_overwrite,copy_matched_subject,zero_terminate,substitute_zero_terminate
    foo\=substitute_subject=foooo,substitute_overwrite,copy_matched_subject,substitute_zero_terminate
    :::\=substitute_subject=::,substitute_overwrite,copy_matched_subject,zero_terminate
    foo\=substitute_subject=x,substitute_overwrite

# Changing the start offset is not allowed
# Failed: error -73: substitute start offset differs from prior pcre2_match call
/\w+|^$/replace=<$&>,global,substitute_matched
    foo\=substitute_offset=1
    :::\=offset=1,substitute_offset=0
    foo\=offset=1,substitute_offset=2
    :::\=offset=1,substitute_offset=10

# From a strict reading of the documentation,
# using a different pointer is NOT allowed with PCRE2_COPY_MATCHED_SUBJECT
# Failed: error -71: substitute subject differs from prior pcre2_match call
/\w+|^$/replace=<$&>,global,substitute_matched
    \=substitute_subject=,copy_matched_subject
    \=null_substitute_subject,copy_matched_subject
    \=null_subject,substitute_subject=,copy_matched_subject
    foo\=substitute_subject=foo,copy_matched_subject
    :::\=substitute_subject=:::,copy_matched_subject

# Tests demonstrating the precedence of errors is: prior_match error, pointer, length, then start offset
/\w+|^$/replace=<$&>,global,substitute_matched
    x\=null_subject,substitute_subject=x
    foo\=substitute_subject=x
    :::\=substitute_subject=:::,offset=1,substitute_offset=0
    foo\=substitute_subject=x,offset=1,substitute_offset=0
    :::\=substitute_subject=x,substitute_overwrite,offset=1,substitute_offset=0

# ####################
# ALLOWED AND GOOD
# ####################

# For simplicity, PCRE2_ZERO_TERMINATED vs a concrete length doesn't count as changing the length
/\w+|^$/replace=<$&>,global,substitute_matched
    foo\=substitute_subject=foo,substitute_overwrite,substitute_zero_terminate
    :::\=substitute_subject=:::,substitute_overwrite,zero_terminate
    foo\=zero_terminate,substitute_subject=foo,substitute_overwrite

# ####################
# ALLOWED AND BAD
# ####################

# Keeping the length the same, the offset the same, and the pointer the same
# Is ok, even if the contents DIFFER
# (also has some fun with copy_matched_subject)
/\w+|^$/replace=<$&>,global,substitute_matched
    foo|bar\=offset=1,substitute_subject=F|OOBAR,substitute_overwrite,zero_terminate

# Using null tells substitute to use the copied match_subject
/\w+|^$/replace=<$&>,global,substitute_matched
    foo|bar\=offset=1,null_substitute_subject,copy_matched_subject
    :::\=offset=1,null_substitute_subject,copy_matched_subject

# Still need the length to be correct when using null
# Failed: error -72: substitute subject length differs from prior pcre2_match call
/\w+|^$/replace=<$&>,global,substitute_matched
    foo\=substitute_subject=x,null_substitute_subject,copy_matched_subject
    :::\=substitute_subject=x,null_substitute_subject,copy_matched_subject

# Can use substitute_zero_terminate with copy_matched_subject
/\w+|^$/replace=<$&>,global,substitute_matched
    foo|bar\=offset=1,substitute_subject=x,substitute_overwrite,copy_matched_subject,substitute_zero_terminate
    :::\=offset=1,substitute_subject=x,substitute_overwrite,copy_matched_subject,substitute_zero_terminate

# Can modify text with copy_matched_subject, original text is used
/\w+|^$/replace=<$&>,global,substitute_matched
    foo|bar\=offset=1,substitute_subject=F|OOBAR,substitute_overwrite,copy_matched_subject
    :::\=offset=1,substitute_subject=foo,substitute_overwrite,copy_matched_subject
